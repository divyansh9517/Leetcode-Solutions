class Solution {
public:

   

    bool isPossible(vector<int>& bloomDay,int day, int m, int k)
    {
        int cnt = 0;
        int Nu_of_Bou = 0;
        for(int  i= 0 ;i  < bloomDay.size() ; i++)
        {

            if(bloomDay[i]<= day)
            {
                cnt++;
            }
            else{
                Nu_of_Bou += cnt/k;
                cnt= 0;
            }
        }
        Nu_of_Bou += cnt/k;
        if(Nu_of_Bou >= m)
        {
            return true;
        }
        return false;
    }
    int minDays(vector<int>& bloomDay, int m, int k) {
        if(bloomDay.size() < (long long)m*k)
        {
            return -1;
        }
        int low = *min_element(bloomDay.begin(),bloomDay.end());
        int high = *max_element(bloomDay.begin(),bloomDay.end());
        int ans =high;
        
        
        while(low <= high)
        {
            int mid = low+(high - low)/2;
            if(isPossible(bloomDay,mid,m,k))
            {
                high = mid - 1;
            }
            else{
                low = mid+1;
            }
        }
        return low;
    }
};
