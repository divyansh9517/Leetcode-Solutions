class Solution {
public:
    vector<int> nextSmallerElement(vector<int> height)
    {
        vector<int> ans(height.size());
        stack<int> st;
        st.push(-1);
        for(int i = height.size()-1 ;i >= 0 ; i--)
        {
            int curr = height[i];
            while((st.top()!=-1) && (height[st.top()] >= curr))
            {
                st.pop();
            }
            ans[i]=st.top();
            st.push(i);
        }
        return  ans;

    }
    vector<int> previousSmallerElement(vector<int> height)
    {
        vector<int> ans(height.size());
        stack<int> st;
        st.push(-1);
        for(int i = 0 ;i < height.size() ; i++)
        {
            int curr = height[i];
            while((st.top()!=-1) && (height[st.top()] >= curr))
            {
                st.pop();
            }
            ans[i]=st.top();
            st.push(i);
        }
        return  ans;

    }
    int largestRectangleArea(vector<int>& heights) {
        vector<int> next = nextSmallerElement(heights);

        for(int i = 0 ; i<next.size() ; i++)
        {
            if(next[i] == -1)
            {
                next[i]=heights.size();
            }
        }
        vector<int> prev = previousSmallerElement(heights);
        vector<int> area(next.size());
        for(int i = 0 ; i< next.size() ; i++)
        {
            int width = next[i]-prev[i]-1;
            int length = heights[i];
            int currArea = width*length;
            area[i]=currArea;
        }
        int maxi = INT_MIN;
        for(int i = 0; i < area.size();i++)
        {
            maxi = max(maxi,area[i]);
        }
        return maxi;
    }
};
