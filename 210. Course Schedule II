class Solution {
public:

    void topoSortByBFS(int n,vector<int> &ans , unordered_map<int,list<int>> &adj)
    {
        queue<int> q;
        unordered_map<int,int> indg;
        for(auto i : adj)
        {
            for(auto nbr : i.second)
            {
                indg[nbr]++;
            }
        }

        for(int i = 0 ; i < n ; i++)
        {
            if(indg[i] == 0)
            {
                q.push(i);
            }
        }

        while(!q.empty())
        {
            int front = q.front();
            q.pop();
            ans.push_back(front);

            for(auto nbr : adj[front])
            {
                indg[nbr]--;
                if(indg[nbr] == 0)
                {
                    q.push(nbr);
                }
            }

        }
    }
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        unordered_map<int,list<int>> adj;
        for(vector<int> i : prerequisites)
        {
            int u = i[0];
            int v = i[1];
            adj[v].push_back(u);
        }
        vector<int> ans;
        topoSortByBFS(numCourses,ans,adj);

        if(ans.size() == numCourses)
        {
            return ans;
        }
        else{
            return {};
        }
    }
};
