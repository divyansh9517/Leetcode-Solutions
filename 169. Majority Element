class Solution {
public:
// moore voting
    int majorityElement(vector<int>& nums) {
       int ele = 0 ; 
       int count = 0;
       for(int i = 0 ;i < nums.size();i++)
       {
        if(count == 0)
        {
            count = 1;
            ele = nums[i];
        }
        else if(ele == nums[i]) count++;
        else count--;
       } 
       return ele;
    }
};

// brute force approach 
class Solution {
public:
    int majorityElement(vector<int>& nums) {
       
        int n = nums.size();
        int i;
        for( i = 0  ;i < n ; i++)
        {
            int count = 0 ;
            for(int j = 0 ; j < n ; j++)
            {
                if(nums[i] == nums[j])
                {
                    count++;
                }
            }
            if(count > n/2)
            {
                return nums[i];
            }
        }
        return -1;

    }
};


// sorting approach
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        sort(nums.begin() , nums.end());
        return nums[nums.size()/2];
    }
};

